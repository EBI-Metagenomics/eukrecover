process {
    withName: ALIGNMENT { cpus = 16; memory = '50.0 GB'}
    withName: ALIGNMENT_WITH_INDEXING { cpus = 16; memory = '50.0 GB'}
    withName: BAM_TO_FASTQ { cpus = 16; memory = '5.0 GB'}
    withName: BIN_REFINEMENT {
        cpus = 8;
        memory = '50 GB';
        conda = '/hps/software/users/rdf/metagenomics/service-team/software/miniconda_py39/envs/metawrap_v1.3'
    }
    withName: JGI_DEPTH {
        cpus = 8;
        memory = '10 GB';
        conda = '/hps/software/users/rdf/metagenomics/service-team/software/miniconda_py39/envs/metawrap_v1.3'
    }
    withName: BUSCO { cpus = 4; memory = '30.0 GB'}
    withName: CAT { cpus = 8; memory = '20.0 GB'}
    withName: CHECKM2 {
        cpus = 8;
        memory = '30.0 GB';
        conda = '/hps/software/users/rdf/metagenomics/service-team/software/miniconda_py39/envs/checkm2'
    }
    withName: CHANGE_DOT_TO_UNDERSCORE { cpus = 8; memory = '2.0 GB'}
    withName: CHANGE_DOT_TO_UNDERSCORE_READS { cpus = 8; memory = '2.0 GB'}
    withName: CHANGE_UNDERSCORE_TO_DOT { cpus = 8; memory = '2.0 GB'}
    withName: CHANGE_ERR_TO_ERZ { cpus = 8; memory = '2.0 GB'}
    withName: "CONCOCT_.*" {
        cpus = 8
        memory = '30.0 GB'
        publishDir = [
            [
                path: { "${params.outdir}/GenomeBinning/CONCOCT/stats/" },
                mode: params.publish_dir_mode,
                pattern: "*.{txt,csv,tsv}"
            ],
            [
                path: { "${params.outdir}/GenomeBinning/CONCOCT/bins" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> new File(filename).getName() },
                pattern: "*/*.fa.gz"
            ]
        ]
        ext.prefix = { "${meta.assembler}-CONCOCT-${meta.id}" }
    }
    withName: CONCOCT_CUTUPFASTA {
        ext.args = [
            "-c 10000",
            "--merge_last",
            "-o 0"
        ].join(' ').trim()
    }
    withName: COVERAGE_RECYCLER { cpus = 1; memory = '2.0 GB'}
    withName: DETECT_RRNA { cpus = 4; memory = '2.0 GB'}
    withName: DREP { cpus = 32; memory = '25.0 GB'}
    withName: DREP_MAGS { cpus = 32; memory = '25.0 GB'}
    withName: EUKCC { cpus = 16; memory = '20.0 GB'}
    withName: EUKCC_MAG { cpus = 16; memory = '20.0 GB'}
    withName: GTDBTK { cpus = 32; memory = '100.0 GB'}
    withName: GUNC { cpus = 4; memory = '20.0 GB'}
    withName: FASTP { cpus = 8; memory = '20.0 GB'}
    withName: LINKTABLE { cpus = 2; memory = '20.0 GB'}
    withName: MAG_CLEANUP_CAT { cpus = 2; memory = '20.0 GB'}
    withName: METAWRAP_BINNING { cpus = 8; memory = '80.0 GB'}
    withName: METABAT2_METABAT2 {
        cpus = 8;
        memory = '20.0 GB';
        publishDir = [
            [
                path: { "${params.outdir}/GenomeBinning/MetaBAT2/" },
                mode: params.publish_dir_mode,
                pattern: 'bins/*.fa.gz'
            ],
            [
                path: { "${params.outdir}/GenomeBinning/MetaBAT2/discarded" },
                mode: params.publish_dir_mode,
                pattern: '*tooShort.fa.gz'
            ],
            [
                path: { "${params.outdir}/GenomeBinning/MetaBAT2/discarded" },
                mode: params.publish_dir_mode,
                pattern: '*lowDepth.fa.gz'
            ]
        ]
        ext.prefix = { "${meta.assembler}-MetaBAT2-${meta.id}" }
        ext.args = [
            params.min_contig_size < 1500 ? "-m 1500" : "-m ${params.min_contig_size}",
            "--unbinned",
            "--seed ${params.metabat_rng_seed}"
        ].join(' ').trim()
    }
    withName: METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS {
        cpus = 8;
        memory = '2.0 GB';
        publishDir = [
            path: { "${params.outdir}/GenomeBinning/depths/contigs" },
            mode: params.publish_dir_mode,
            pattern: '*-depth.txt.gz'
        ]
    }
    withName: MAXBIN2 {
        cpus = 8;
        memory = '10.0 GB';
        publishDir = [
            [
                path: { "${params.outdir}/GenomeBinning/MaxBin2/discarded" },
                mode: params.publish_dir_mode,
                pattern: '*.tooshort.gz'
            ],
        ]
        ext.prefix = { "${meta.assembler}-MaxBin2-${meta.id}" }
        // if no gene found, will crash so allow ignore so rest of pipeline
        // completes but without MaxBin2 results
        ext.args = [
            params.min_contig_size < 1500 ? "-min_contig_length 1500" : "-min_contig_length ${params.min_contig_size}",
        ].join(' ').trim()
    }
    withName: SELECT_CONT_SEQUENCES { cpus = 1; memory = '2.0 GB'}
}

singularity {
   enabled = true
   autoMounts = true
   cacheDir = params.singularity_cachedir
}

process {
    queue = 'production'
    time = '2h'
    withLabel: process_bigmem {
        queue = 'bigmem'
        time = '5d'
    }
}
conda.enabled = true

params.skip_maxbin2 = false
params.skip_metabat2 = false
params.skip_concoct = false